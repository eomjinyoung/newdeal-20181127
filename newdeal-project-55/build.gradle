plugins {
    id 'java'
    id 'eclipse-wtp'
    id 'war'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

dependencies {
    // Mariadb JDBC Driver
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.3.0'
    
    // MyBatis 라이브러리
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
    
    // Spring WebMVC 라이브러리
    // => 이 라이브러리를 추가하면 spring-context는 제거해도 된다.
    //    이 라이브러리의 의존 라이브러리가 spring-context이기 때문에
    //    이 라이브러리를 가져올 때 spring-context도 함께 가져온다.
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.1.3.RELEASE'

    // Spring IoC Container 라이브러리
    //compile group: 'org.springframework', name: 'spring-context', version: '5.1.3.RELEASE'
    
    // MyBatis-Spring 연동 라이브러리
    // => Spring에서 MyBatis 관련 객체를 쉽게 만들 수 있도록 
    //    도와주는 클래스이다.
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.2'
    
    // 아파치 DB 커넥션풀 라이브러리
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.5.0'
    
    // Spring JDBC 라이브러리
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.1.3.RELEASE'
    
    // Servlet API 라이브러리
    // => providedCompile? 
    //    개발하는 동안에만 사용하고, 배치할 때는 제외한다.
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    
    // JSTL 라이브러리
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    
    compile 'com.google.guava:guava:23.0'
    testCompile 'junit:junit:4.12'
}

repositories {
    jcenter()
}
